# Resolve react_native_pods.rb with node to allow for hoisting
# require Pod::Executable.execute_command('node', ['-p',
#   'require.resolve(
#     "react-native/scripts/react_native_pods.rb",
#     {paths: [process.argv[1]]},
#   )', __dir__]).strip
def node_require(script)
  # Resolve script with node to allow for hoisting
     require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
       '#{script}',
       {paths: [process.argv[1]]},
     )", __dir__]).strip
 end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

platform :ios, '13.4'  # Update the iOS deployment target to 13.4 to resolve compatibility issues

prepare_react_native_project!

setup_permissions([
  'LocationAccuracy',
   'LocationAlways',
   'LocationWhenInUse',
    'Camera',
    'PhotoLibrary',
    'Notifications'
  ])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green


end



target 'DayOnes' do
  config = use_native_modules!
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Firebase Core and other services
#  pod 'Firebase/Core'
#  pod 'Firebase/Auth'   # Add other Firebase services as needed

  target 'DayOnesTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )
  end
end
